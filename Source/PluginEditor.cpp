/*
    ==============================================================================

    This file was partly auto-generated by JUCE.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

    ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"



//==============================================================================
SfzpluginAudioProcessorEditor::SfzpluginAudioProcessorEditor (SfzpluginAudioProcessor& p, MidiKeyboardState& keyboardState, const SfzSynth& synth)
    : AudioProcessorEditor (&p), processor (p), sfzChooser(SfzFileChooser(p)), synth(synth),
        keyboardComponent(keyboardState, MidiKeyboardComponent::Orientation::horizontalKeyboard)
{
    setSize(600, 300);
    addAndMakeVisible(openButton);
    openButton.setButtonText("Open SFZ...");
    openButton.onClick = [this](){ sfzChooser.setVisible(true); };
    addAndMakeVisible(textBox);
    textBox.setMultiLine(true);
    addAndMakeVisible(numVoices);
    numVoices.setText("Active voices: 0", dontSendNotification);
    addAndMakeVisible(keyboardComponent);
    addChildComponent(sfzChooser);
    startTimer(100);
}

SfzpluginAudioProcessorEditor::~SfzpluginAudioProcessorEditor()
{
    stopTimer();
}

//==============================================================================
void SfzpluginAudioProcessorEditor::paint (Graphics& g)
{
    // (Our component is opaque, so we must completely fill the background with a solid colour)
    g.fillAll (getLookAndFeel().findColour (ResizableWindow::backgroundColourId));
    
}

void SfzpluginAudioProcessorEditor::resized()
{
    sfzChooser.setBounds(getLocalBounds());
    auto paintArea = getLocalBounds();
    auto topRow = paintArea.removeFromTop(30);
    openButton.setBounds(topRow.removeFromLeft(100));
    topRow.removeFromLeft(30);
    numVoices.setBounds(topRow.removeFromRight(200));
    keyboardComponent.setBounds(paintArea.removeFromBottom(100));
    textBox.setBounds(paintArea);
}
